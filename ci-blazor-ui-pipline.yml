trigger:
- main

variables:
    buildConfiguration: 'Release'
    deployment_token: '79c0c85d71d89daa8d3841f2ebaf955849a1161f155d5e3121d218aaf48b18d70-b174618f-1e57-435c-a722-3303e3810c1f00344502'

pool:
  vmImage: windows-latest

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/src/WebUI.Blazor/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2 
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/src/WebUI.Blazor/WebUI.Blazor.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: DotNetCoreCLI@2 
  displayName: 'Publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/src/WebUI.Blazor/WebUI.Blazor.csproj'
    arguments: '--configuration $(BuildConfiguration) --output data'
    zipAfterPublish: true
      
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script:
      ls -R
    errorActionPreference: 'continue'
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '**/data/WebUI.Blazor.zip'
    destinationFolder: 'PublishData'
    cleanDestinationFolder: true
    overwriteExistingFiles: false

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script:
      ls -R
    errorActionPreference: 'continue'
    
- task: AzureStaticWebApp@0
  inputs:
    app_location: 'PublishData/wwwroot'
    api_location: 'api'
    output_location: "wwwroot"
  env:
    azure_static_web_apps_api_token: $(deployment_token)

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
